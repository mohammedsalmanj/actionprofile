name: workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  ECR_REPOSITORY: 'vprofile-appimage'

permissions:
  contents: read

jobs:
  # --------------------- BUILD JOB ---------------------
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Code checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Maven Build
        run: mvn clean install -DskipTests

      - name: Upload Build Artifact (WAR)
        uses: actions/upload-artifact@v4
        with:
          name: vprofile-app
          path: target/*.war

      - name: Notify if Build Fails
        if: failure()
        run: echo "‚ùå Build job failed! Please check logs."

  # --------------------- TESTING JOB ---------------------
  Testing:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: Code checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Unit Tests
        if: github.ref == 'refs/heads/main'
        run: mvn test

      - name: Checkstyle Code Quality
        if: github.ref == 'refs/heads/main'
        run: mvn checkstyle:checkstyle

      - name: Skipping tests on other branches
        if: github.ref != 'refs/heads/main'
        run: echo "Skipping tests and code checks"

  # --------------------- SECURITY SCAN ---------------------
  Security_Scan:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: Code checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Trivy filesystem scan
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: fs
          scan-ref: .
          format: json
          exit-code: 0
          vuln-type: os,library
          output: trivy-results.json

      - name: Upload Trivy scan results as artifact
        uses: actions/upload-artifact@v4
        with:
          name: trivy-scan-results
          path: trivy-results.json

  # --------------------- BUILD AND PUSH DOCKER IMAGE ---------------------
  BUILD_AND_PUBLISH:
    name: BUILD_AND_PUBLISH
    runs-on: ubuntu-latest
    environment: production
    needs: [Build, Testing, Security_Scan]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Code checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Debug workspace (optional)
        run: |
          echo "üìÅ Listing repo files"
          ls -R

      - name: üê≥ Build, Tag, and Push Docker Image to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: vprofile-appimage
          IMAGE_TAG: ${{ github.run_number }}
        run: |
          echo "üõ†Ô∏è Building Docker image..."
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          echo "üì§ Pushing Docker image to ECR..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "‚úÖ Docker image pushed successfully!"

      - name: Run Trivy image scan on final image
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: ${{ steps.login-ecr.outputs.registry }}/vprofile-appimage:${{ github.run_number }}
          format: table
          exit-code: 0
