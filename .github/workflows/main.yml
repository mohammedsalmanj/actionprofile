# GitHub Actions workflow file
name: workflow

# Trigger the workflow on push, pull request, and workflow dispatch events
on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

  workflow_dispatch:





# Set permissions for the workflow
permissions:
  contents: read


# Define the jobs for the workflow
jobs:
  Build:
    # Run the job on an ubuntu-latest environment
    runs-on: ubuntu-latest
    # Steps to run in the job
    steps:
      # Checkout the code
      - name: Code checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      # Build the application using Maven
      - name: Maven Build
        run: mvn install

      # Upload the build artifact (WAR) as an artifact
      - name: Upload Build Artifact (WAR)
        uses: actions/upload-artifact@v4
        with:
          name: vprofile-app
          path: target/*.war

      # Notify if the build fails
      - name: Notify if Build Fails
        if: failure()
        run: echo " Build job failed! Please check logs."


  Testing:
    # Run the job on an ubuntu-latest environment
    runs-on: ubuntu-latest
    # Needs the Build job to complete successfully
    needs: Build
    # Steps to run in the job
    steps:
      # Checkout the code
      - name: Code checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Run tests on the main branch
      - name: Run tests on main branch
        if: github.ref == 'refs/heads/main'
        run: mvn test

      # Run Checkstyle on the main branch
      - name: Checkstyle
        if: github.ref == 'refs/heads/main'
        run: mvn checkstyle:checkstyle

      # Skip unit tests and code analysis on other branches
      - name: Run tests on other branches
        if: github.ref != 'refs/heads/main'
        run: echo "Skipping unit tests and code analysis"


  Security_Scan:
    # Run the job on an ubuntu-latest environment
    runs-on: ubuntu-latest
    # Needs the Build job to complete successfully
    needs: Build
    # Steps to run in the job
    steps:
      # Checkout the code
      - name: Code checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Run Trivy filesystem scan
      - name: Run Trivy filesystem scan
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: fs
          scan-ref: .
          format: json
          exit-code: 0
          vuln-type: os,library
          output: trivy-results.json

      # Upload Trivy scan results as an artifact
      - name: Upload Trivy scan results as artifact
        uses: actions/upload-artifact@v4
        with:
          name: trivy-scan-results
          path: trivy-results.json
