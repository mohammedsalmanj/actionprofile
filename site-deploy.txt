🧩 Step 1️⃣ — Check if the image exists

Run this in your terminal:

docker images


You should see something like:

REPOSITORY                 TAG       IMAGE ID       CREATED          SIZE
vprofile                   test      a1b2c3d4e5f6   2 minutes ago    590MB


✅ If you see vprofile:test (or whatever tag you used), the build succeeded.

🧩 Step 2️⃣ — Run the container

Run this command:

docker run -d -p 8080:8080 --name vprofile-container vprofile:test

Breakdown:
Option	Meaning
-d	Run in detached mode (background)
-p 8080:8080	Maps host port 8080 → container port 8080
--name vprofile-container	Gives the container a friendly name
vprofile:test	Image name + tag you built

✅ This starts Tomcat inside the container.

🧩 Step 3️⃣ — Verify it’s running

Run:

docker ps


You should see something like:

CONTAINER ID   IMAGE           COMMAND              STATUS          PORTS                    NAMES
c0ffee123abc   vprofile:test   "catalina.sh run"    Up 10 seconds   0.0.0.0:8080->8080/tcp   vprofile-container


That means Tomcat (and your app) are live. 🔥

🧩 Step 4️⃣ — Open the app in browser

Go to:
👉 http://localhost:8080

If your WAR built correctly, you’ll see your vprofile app homepage or login page (depending on your project).
If it’s the default Tomcat landing page, that means the WAR wasn’t copied — I’ll show how to debug that below.

🧩 Step 5️⃣ — Check container logs (if blank page or 404)

If nothing appears, view logs:

docker logs -f vprofile-container


You should see something like:

INFO [main] org.apache.catalina.startup.Catalina.start Server startup in 5000 ms
INFO Deploying web application archive [/usr/local/tomcat/webapps/ROOT.war]


✅ If you see Server startup in ... ms — the app is ready.
If you see errors like “No WAR found” or “context failed”, we’ll fix it in 2 seconds.

🧩 Step 6️⃣ — (Optional) Rebuild cleanly

If you want to start fresh:

docker stop vprofile-container
docker rm vprofile-container
docker rmi vprofile:test


Then re-run your build and start again.

🧠 Analogy

Think of it like a small portable Tomcat server:

docker build → bakes the app into a box 🍱

docker run -p 8080:8080 → opens a small door to that box

localhost:8080 → lets you peek inside via your browser 🔍

✅ Final Quick Check Recap

Step	Command	Purpose
Check image exists	docker images	Confirm build done
Run container	docker run -d -p 8080:8080 vprofile:test	Start app
Verify running	docker ps	Check active containers
View app	http://localhost:8080	Access in browser
Logs	docker logs -f vprofile-container	Debug startup
